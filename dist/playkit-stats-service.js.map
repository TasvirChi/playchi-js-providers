{"version":3,"sources":["./providers/webpack/universalModuleDefinition","./providers/webpack/bootstrap","./providers/./util/error/error.js","./providers/./util/error/severity.js","./providers/./util/error/category.js","./providers/./util/error/code.js","./providers/./util/request-builder.js","./providers/./util/logger.js","./providers/./k-provider/ovp/config.js","./providers/./util/clone.js","./providers/./k-provider/common/base-service-result.js","./providers/./k-provider/common/multi-request-builder.js","./providers/./k-provider/ovp/services/ovp-service.js","./providers/./util/param.js","./providers/./k-provider/ovp/services/stats/stats-service.js","./providers/./k-provider/ovp/services/stats/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Error","severity","category","code","data","this","_logger","error","RECOVERABLE","CRITICAL","NETWORK","SERVICE","PROVIDER","UNSUPPORTED_SCHEME","BAD_HTTP_STATUS","HTTP_ERROR","TIMEOUT","MALFORMED_DATA_URI","BAD_SERVER_RESPONSE","MULTIREQUEST_API_ERROR","API_RESPONSE_MISMATCH","ERROR","BLOCK_ACTION","MEDIA_STATUS_NOT_READY","MISSING_MANDATORY_PARAMS","MISSING_PLAY_SOURCE","METHOD_NOT_IMPLEMENTED","getLogger","RequestBuilder","headers","Map","async","timeout","maxAttempts","serviceUrl","service","action","promise","Promise","resolve","reject","_requestPromise","url","Severity","Category","Code","_createXHR","request","XMLHttpRequest","onreadystatechange","readyState","status","response","JSON","parse","responseText","responseHeaders","_getResponseHeaders","_createError","text","open","method","retryConfig","requestTime","performance","now","ontimeout","_handleError","statusText","onerror","onabort","forEach","setRequestHeader","send","params","getAllResponseHeaders","split","filter","header","toLowerCase","indexOf","_attemptCounter","assign","attempt","JsLogger","trace","debug","info","log","warn","time","timeEnd","getLevel","setLevel","defaultConfig","cdnUrl","serviceParams","apiVersion","format","useApiCaptions","OVPConfiguration","clientConfig","clone","node","Array","isArray","length","slice","e","keys","ServiceResult","objectType","hasError","ServiceError","message","MultiRequestBuilder","requests","push","requestParams","serviceDef","stringify","err","FAILED_PARSING_REQUEST","doHttpRequest","then","multiRequestResult","MultiRequestResult","success","results","result","serviceResult","OVPService","playerVersion","ks","partnerId","config","ovpParams","clientTag","set","multiReq","getUrl","param","a","rbracket","obj","toString","add","k","v","encodeURIComponent","buildParams","prefix","len","test","String","join","replace","OVPStatsService","event","tag","NAME","__NAME__","VERSION","__VERSION__"],"mappings":"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","file":"playkit-stats-service.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"stats\"] = factory();\n\telse\n\t\troot[\"playkit\"] = root[\"playkit\"] || {}, root[\"playkit\"][\"services\"] = root[\"playkit\"][\"services\"] || {}, root[\"playkit\"][\"services\"][\"stats\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","//@flow\nimport getLogger from '../logger';\nimport {Severity} from './severity';\nimport type {SeverityType} from './severity';\nimport {Code} from './code';\nimport type {CodeType} from './code';\nimport {Category} from './category';\nimport type {CategoryType} from './category';\n\nconst CLASS_NAME: string = 'Error';\n\n/**\n * @classdesc This is a description of the error class.\n */\nexport default class Error {\n  severity: number;\n  category: number;\n  code: number;\n  data: any;\n  /**\n   * @enum {number}\n   */\n  static Severity: SeverityType = Severity;\n  /**\n   * @enum {number}\n   */\n  static Category: CategoryType = Category;\n  /**\n   * @enum {number}\n   */\n  static Code: CodeType = Code;\n  static _logger: any = getLogger(CLASS_NAME);\n\n  /**\n   * @constructor\n   * @param {number} severity - error's severity\n   * @param {number} category - error's category.\n   * @param {number} code - error's code.\n   * @param {any} data - additional data for the error.\n   */\n  constructor(severity: number, category: number, code: number, data: any = {}) {\n    this.severity = severity;\n    this.category = category;\n    this.code = code;\n    this.data = data;\n    Error._logger.error(`Category:${category} | Code:${code} |`, data);\n  }\n}\n","//@flow\n\ntype SeverityType = {[severity: string]: number};\n\nconst Severity: SeverityType = {\n  /**\n   * An error occurred, but the Player is attempting to recover from the error.\n   *\n   * If the Player cannot ultimately recover, it still may not throw a CRITICAL\n   * error.  For example, retrying for a media segment will never result in\n   * a CRITICAL error (the Player will just retry forever).\n   */\n  RECOVERABLE: 1,\n  /**\n   * A critical error that the library cannot recover from.  These usually cause\n   * the Player to stop loading or updating.  A new manifest must be loaded\n   * to reset the library.\n   */\n  CRITICAL: 2\n};\n\nexport {Severity};\nexport type {SeverityType};\n","//@flow\ntype CategoryType = {[category: string]: number};\n\nconst Category: CategoryType = {\n  /** Errors from the network stack. */\n  NETWORK: 1,\n  SERVICE: 2,\n  PROVIDER: 3\n};\n\nexport {Category};\nexport type {CategoryType};\n","//@flow\n\ntype CodeType = {[code: string]: number};\n\nconst Code: CodeType = {\n  /**\n   * A network request was made using an unsupported URI scheme.\n   */\n  UNSUPPORTED_SCHEME: 1000,\n\n  /**\n   * An HTTP network request returned an HTTP status that indicated a failure.\n   */\n  BAD_HTTP_STATUS: 1001,\n\n  /**\n   * An HTTP network request failed with an error, but not from the server.\n   */\n  HTTP_ERROR: 1002,\n\n  /**\n   * A network request timed out.\n   */\n  TIMEOUT: 1003,\n\n  /**\n   * A network request was made with a malformed data URI.\n   */\n  MALFORMED_DATA_URI: 1004,\n\n  /**\n   * The server responsded with 2xx response, but it couldn't be parsed\n   */\n  BAD_SERVER_RESPONSE: 1005,\n\n  /**\n   * The server response had a valid structure but contained an error from the API\n   */\n  MULTIREQUEST_API_ERROR: 1006,\n\n  /**\n   * The server response had a valid structure and valid API result, but it did not match the request\n   */\n  API_RESPONSE_MISMATCH: 1007,\n\n  /**\n   * The server responded with an error\n   */\n  ERROR: 2000,\n\n  /**\n   * The server responded with a block action\n   */\n  BLOCK_ACTION: 2001,\n\n  /**\n   * The server responded with status import or pre convert\n   */\n  MEDIA_STATUS_NOT_READY: 2002,\n\n  /**\n   * The provider is missing mandatory parameter/s\n   */\n\n  MISSING_MANDATORY_PARAMS: 3000,\n\n  /**\n   * The server responded with empty sources objects (for HLS, Dash and progressive)\n   */\n  MISSING_PLAY_SOURCE: 3001,\n\n  /**\n   * The provider doesn't implement the called api\n   */\n  METHOD_NOT_IMPLEMENTED: 3002\n};\n\nexport {Code};\nexport type {CodeType};\n","//@flow\nimport Error from './error/error';\n\nconst KALTURA_HEADER_PREFIX: string = 'x-';\n\nexport default class RequestBuilder {\n  /**\n   * @member - Service name\n   * @type {string}\n   */\n  service: string;\n  /**\n   * @member - Service action\n   * @type {string}\n   */\n  action: string;\n  /**\n   * @member - Service params\n   * @type {any}\n   */\n  params: any;\n  /**\n   * @memberof - Service headers\n   * @type {Map<string, string>}\n   */\n  headers: Map<string, string>;\n  /**\n   * @memberof - Service URL\n   * @type {string}\n   */\n  url: string;\n  /**\n   * @memberof - Service method (POST,GET,DELETE etc..)\n   * @type {string}\n   */\n  method: string;\n  /**\n   * @memberof - Service tag\n   * @type {string}\n   */\n  tag: string;\n  /**\n   * @memberof - the response headers of the arra\n   * @type {Array<string>}\n   */\n  responseHeaders: Array<string>;\n  /**\n   * @description network retry configuration\n   * @memberof RequestBuilder\n   * @type {ProviderNetworkRetryParameters}\n   */\n  retryConfig: ProviderNetworkRetryParameters = {\n    async: true,\n    timeout: 0,\n    maxAttempts: 4\n  };\n\n  /**\n   * @description number of xhr attempts for the same multi - request.\n   * @memberof RequestBuilder\n   * @type {number}\n   * @private\n   */\n  _attemptCounter: number = 1;\n\n  /**\n   * @description hold the promise result of the XHR request(s) - if all tries fails, it rejects with the error.\n   * @memberof RequestBuilder\n   * @type {Object}\n   * @private\n   */\n  _requestPromise: Object;\n\n  /**\n   * @constructor\n   * @param {Map<string, string>} headers The request headers\n   */\n  constructor(headers: Map<string, string> = new Map()) {\n    this.headers = headers;\n  }\n\n  /**\n   * Builds restful service URL\n   * @function getUrl\n   * @param {string} serviceUrl - The service base URL\n   * @returns {string} The service URL\n   */\n  getUrl(serviceUrl: string): string {\n    return serviceUrl + '/service/' + this.service + (this.action ? '/action/' + this.action : '');\n  }\n\n  /**\n   * Executes service\n   * @function doHttpRequest\n   * @returns {Promise.<any>} Service response as promise\n   */\n  doHttpRequest(): Promise<any> {\n    const promise = new Promise((resolve, reject) => {\n      this._requestPromise = {\n        resolve,\n        reject\n      };\n    });\n    if (!this.url) {\n      this._requestPromise.reject(\n        new Error(Error.Severity.CRITICAL, Error.Category.NETWORK, Error.Code.MALFORMED_DATA_URI, {\n          url: this.url\n        })\n      );\n    }\n    this._createXHR();\n    return promise;\n  }\n\n  _createXHR(): void {\n    let request = new XMLHttpRequest();\n    request.onreadystatechange = () => {\n      if (request.readyState === 4) {\n        if (request.status === 200) {\n          try {\n            const response = JSON.parse(request.responseText);\n            this.responseHeaders = this._getResponseHeaders(request);\n            // the promise returns the response for backwards compatibility\n            return this._requestPromise.resolve(response);\n          } catch (error) {\n            this._requestPromise.reject(\n              this._createError(request, Error.Code.BAD_SERVER_RESPONSE, {\n                text: request.responseText\n              })\n            );\n          }\n        }\n      }\n    };\n    request.open(this.method, this.url, this.retryConfig.async);\n    if (this.retryConfig.async && this.retryConfig.timeout) {\n      request.timeout = this.retryConfig.timeout;\n    }\n    const requestTime = performance.now();\n    request.ontimeout = () => {\n      this._handleError(request, Error.Code.TIMEOUT, {\n        timeout: (performance.now() - requestTime) / 1000,\n        statusText: request.statusText\n      });\n    };\n    request.onerror = request.onabort = () => {\n      this._handleError(request, Error.Code.HTTP_ERROR, {\n        text: request.responseText,\n        statusText: request.statusText\n      });\n    };\n    this.headers.forEach((value, key) => {\n      request.setRequestHeader(key, value);\n    });\n    request.send(this.params);\n  }\n\n  _getResponseHeaders(request: XMLHttpRequest): Array<string> {\n    return request\n      .getAllResponseHeaders()\n      .split('\\n')\n      .filter(header => header.toLowerCase().indexOf(KALTURA_HEADER_PREFIX) === 0);\n  }\n\n  _handleError(request: XMLHttpRequest, code: number, data: Object): Promise<*> | void {\n    const error = this._createError(request, code, data);\n    request.onreadystatechange = function () {};\n    request.onerror = function () {};\n    request.ontimeout = function () {};\n    request.onabort = function () {};\n    if (this.retryConfig.maxAttempts && this._attemptCounter < this.retryConfig.maxAttempts) {\n      this._attemptCounter++;\n      this._createXHR();\n    } else {\n      return this._requestPromise.reject(error);\n    }\n  }\n\n  _createError(request: XMLHttpRequest, code: number, data: Object): Error {\n    Object.assign(data, {\n      url: this.url,\n      headers: this._getResponseHeaders(request),\n      attempt: this._attemptCounter\n    });\n    return new Error(Error.Severity.CRITICAL, Error.Category.NETWORK, code, data);\n  }\n}\n","//@flow\nexport type LogLevelObject = {value: number, name: string};\nexport type LogLevelType = {[level: string]: LogLevelObject};\nexport type loggerFunctionType = {\n  trace: Function,\n  debug: Function,\n  info: Function,\n  log: Function,\n  warn: Function,\n  error: Function,\n  time: Function,\n  timeEnd: Function,\n  getLevel: Function,\n  setLevel: Function\n};\n\nexport type LoggerType = {\n  getLogger: loggerFunctionType,\n  LogLevel: LogLevelType\n};\n\nlet JsLogger = {\n  get: () => ({\n    trace: () => {},\n    debug: () => {},\n    info: () => {},\n    log: () => {},\n    warn: () => {},\n    error: () => {},\n    time: () => {},\n    timeEnd: () => {},\n    getLevel: () => {},\n    setLevel: () => {}\n  })\n};\n\nlet LogLevel: LogLevelType = {};\n/**\n * set logger\n * @param {LoggerType} logger - the logger\n * @returns {void}\n */\nfunction setLogger(logger: ?LoggerType): void {\n  if (logger && typeof logger.getLogger === 'function') {\n    JsLogger.get = logger.getLogger;\n  }\n  if (logger && logger.LogLevel) {\n    LogLevel = logger.LogLevel;\n  }\n}\n\n/**\n * get a logger\n * @param {?string} name - the logger name\n * @returns {Object} - the logger class\n */\nfunction getLogger(name?: string): Object {\n  //$FlowFixMe\n  return JsLogger.get(name);\n}\n\n/**\n * get the log level\n * @param {?string} name - the logger name\n * @returns {LogLevelObject} - the log level\n */\nfunction getLogLevel(name?: string): LogLevelObject {\n  return getLogger(name).getLevel();\n}\n\n/**\n * sets the logger level\n * @param {LogLevelObject} level - the log level\n * @param {?string} name - the logger name\n * @returns {void}\n */\nfunction setLogLevel(level: LogLevelObject, name?: string): void {\n  getLogger(name).setLevel(level);\n}\n\nexport default getLogger;\nexport {getLogLevel, setLogLevel, setLogger, LogLevel};\n","//@flow\nimport {clone} from '../../util/clone';\n\nconst defaultConfig: Object = {\n  serviceUrl: 'https://cdnapisec.kaltura.com/api_v3',\n  cdnUrl: 'https://cdnapisec.kaltura.com',\n  serviceParams: {\n    apiVersion: '3.3.0',\n    format: 1\n  },\n  useApiCaptions: true\n};\n\nexport default class OVPConfiguration {\n  static set(clientConfig?: ProviderEnvConfigObject) {\n    if (clientConfig) {\n      Object.assign(defaultConfig, clientConfig);\n    }\n  }\n\n  static get(): Object {\n    return clone(defaultConfig);\n  }\n}\n\nexport {OVPConfiguration};\n","const clone = data => {\n  let node;\n  if (Array.isArray(data)) {\n    node = data.length > 0 ? data.slice(0) : [];\n    node.forEach((e, i) => {\n      if ((typeof e === 'object' && e !== {}) || (Array.isArray(e) && e.length > 0)) {\n        node[i] = clone(e);\n      }\n    });\n  } else if (typeof data === 'object') {\n    node = Object.assign({}, data);\n    Object.keys(node).forEach(key => {\n      if ((typeof node[key] === 'object' && node[key] !== {}) || (Array.isArray(node[key]) && node[key].length > 0)) {\n        node[key] = clone(node[key]);\n      }\n    });\n  } else {\n    node = data;\n  }\n  return node;\n};\n\nexport {clone};\n","//@flow\nexport default class ServiceResult {\n  /**\n   * @member - Is service returned an error\n   * @type {boolean}\n   */\n  hasError: boolean = false;\n  /**\n   * @member - The service error\n   * @type {ServiceError}\n   */\n  error: ServiceError;\n  /**\n   * @member - The service result data\n   * @type {Object}\n   */\n  data: Object;\n\n  /**\n   * @constructor\n   * @param {Object} response - Service response\n   */\n  constructor(response: Object) {\n    if (response.objectType === 'KalturaAPIException') {\n      this.hasError = true;\n      this.error = new ServiceError(response.code, response.message);\n    } else if (response.error && response.error.objectType === 'KalturaAPIException') {\n      this.hasError = true;\n      this.error = new ServiceError(response.error.code, response.error.message);\n    } else {\n      this.data = response;\n    }\n  }\n}\n\nclass ServiceError {\n  /**\n   * @member - The error code\n   * @type {string}\n   */\n  code: string;\n  /**\n   * @member - The error message\n   * @type {string}\n   */\n  message: string;\n\n  /**\n   * @constructor\n   * @param {string} code - The result code\n   * @param {string} message - The result message\n   */\n  constructor(code: string, message: string) {\n    this.code = code;\n    this.message = message;\n  }\n}\n","//@flow\nimport RequestBuilder from '../../util/request-builder';\nimport getLogger from '../../util/logger';\nimport ServiceResult from './base-service-result';\nimport Error from '../../util/error/error';\n\nexport default class MultiRequestBuilder extends RequestBuilder {\n  static _logger = getLogger('MultiRequestBuilder');\n  /**\n   * @memberof - MultiRequestBuilder\n   * @type {Array<RequestBuilder>}\n   */\n  requests: Array<RequestBuilder> = [];\n  /**\n   * Adds request to requests array\n   * @function add\n   * @param {RequestBuilder} request The request\n   * @returns {MultiRequestBuilder} The multiRequest\n   */\n  add(request: RequestBuilder): MultiRequestBuilder {\n    this.requests.push(request);\n    const requestParams = {};\n    const serviceDef: Object = {service: request.service, action: request.action};\n    Object.assign(requestParams, {[this.requests.length]: Object.assign(serviceDef, request.params)});\n    Object.assign(requestParams, this.params);\n    this.params = requestParams;\n    return this;\n  }\n\n  /**\n   * Executes a multi request\n   * @function execute\n   * @returns {Promise} The multirequest execution promise\n   */\n  execute(): Promise<Object> {\n    return new Promise((resolve, reject) => {\n      try {\n        this.params = JSON.stringify(this.params);\n      } catch (err) {\n        MultiRequestBuilder._logger.error(`${err.message}`);\n        reject(\n          new Error(Error.Severity.CRITICAL, Error.Category.PROVIDER, Error.Code.FAILED_PARSING_REQUEST, {\n            error: err,\n            params: this.params\n          })\n        );\n      }\n      this.doHttpRequest().then(\n        data => {\n          const multiRequestResult = new MultiRequestResult(data);\n          if (multiRequestResult.success) {\n            resolve({\n              headers: this.responseHeaders,\n              response: multiRequestResult\n            });\n          } else {\n            reject(\n              new Error(Error.Severity.CRITICAL, Error.Category.NETWORK, Error.Code.MULTIREQUEST_API_ERROR, {\n                url: this.url,\n                headers: this.responseHeaders,\n                results: multiRequestResult.results\n              })\n            );\n          }\n        },\n        err => {\n          reject(err);\n        }\n      );\n    });\n  }\n}\n\nexport class MultiRequestResult {\n  static _logger = getLogger('MultiRequestResult');\n  /**\n   * @memberof MultiRequestResult\n   * @type {boolean}\n   */\n  success: boolean;\n  /**\n   * @memberof MultiRequestResult\n   * @type {Object}\n   */\n  results: Array<ServiceResult> = [];\n  /**\n   * @constructor\n   * @param {Object} response data\n   */\n  constructor(response: Object) {\n    this.success = true;\n    const responseArr = response.result ? response.result : response;\n    responseArr.forEach(result => {\n      const serviceResult: ServiceResult = new ServiceResult(result);\n      this.results.push(serviceResult);\n      if (serviceResult.hasError) {\n        MultiRequestResult._logger.error(\n          `Service returned an error with error code: ${serviceResult.error.code} and message: ${serviceResult.error.message}.`\n        );\n        this.success = false;\n        return;\n      }\n    });\n  }\n}\n","//@flow\nimport MultiRequestBuilder from '../../common/multi-request-builder';\nimport OVPConfiguration from '../config';\n\nconst SERVICE_NAME: string = 'multirequest';\n\nexport default class OVPService {\n  /**\n   * Gets a new instance of MultiRequestBuilder with ovp params\n   * @function getMultiRequest\n   * @param {string} playerVersion The player version\n   * @param {string} ks The ks\n   * @param {string} partnerId The partner ID\n   * @returns {MultiRequestBuilder} The multi request builder\n   * @static\n   */\n  static getMultiRequest(playerVersion: string, ks: string, partnerId?: number): MultiRequestBuilder {\n    const config = OVPConfiguration.get();\n    const ovpParams = config.serviceParams;\n    Object.assign(ovpParams, {ks: ks, clientTag: 'html5:v' + playerVersion});\n    if (partnerId) {\n      Object.assign(ovpParams, {partnerId: partnerId});\n    }\n    const headers: Map<string, string> = new Map();\n    headers.set('Content-Type', 'application/json');\n    const multiReq = new MultiRequestBuilder(headers);\n    multiReq.method = 'POST';\n    multiReq.service = SERVICE_NAME;\n    multiReq.url = multiReq.getUrl(config.serviceUrl);\n    multiReq.params = ovpParams;\n    return multiReq;\n  }\n}\n","const param = a => {\n  let s = [],\n    rbracket = /\\[\\]$/,\n    isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    },\n    add = function (k, v) {\n      v = typeof v === 'function' ? v() : v === null ? '' : v === undefined ? '' : v;\n      s[s.length] = encodeURIComponent(k) + '=' + encodeURIComponent(v);\n    },\n    buildParams = function (prefix, obj) {\n      let i, len, key;\n\n      if (prefix) {\n        if (isArray(obj)) {\n          for (i = 0, len = obj.length; i < len; i++) {\n            if (rbracket.test(prefix)) {\n              add(prefix, obj[i]);\n            } else {\n              buildParams(prefix + ':' + (typeof obj[i] === 'object' ? i : ''), obj[i]);\n            }\n          }\n        } else if (obj && String(obj) === '[object Object]') {\n          for (key in obj) {\n            buildParams(prefix + ':' + key, obj[key]);\n          }\n        } else {\n          add(prefix, obj);\n        }\n      } else if (isArray(obj)) {\n        for (i = 0, len = obj.length; i < len; i++) {\n          add(obj[i].name, obj[i].value);\n        }\n      } else {\n        for (key in obj) {\n          buildParams(key, obj[key]);\n        }\n      }\n      return s;\n    };\n\n  return buildParams('', a).join('&').replace(/%20/g, '+');\n};\n\nexport {param};\n","//@flow\nimport OVPService from '../ovp-service';\nimport RequestBuilder from '../../../../util/request-builder';\nimport OVPConfiguration from '../../config';\nimport {param} from '../../../../util/param';\n\nconst SERVICE_NAME: string = 'stats';\n\nexport default class OVPStatsService extends OVPService {\n  /**\n   * Creates an instance of RequestBuilder for stats.collect\n   * @function collect\n   * @param {string} serviceUrl - The service base url\n   * @param {string} ks - The ks\n   * @param {string} playerVersion - The player version\n   * @param {Object} event - The event data\n   * @returns {RequestBuilder} - The request builder\n   * @static\n   */\n  static collect(serviceUrl: string, ks: string, playerVersion: string, event: Object): RequestBuilder {\n    const ovpParams = OVPConfiguration.get();\n    const serviceParams = {};\n    Object.assign(serviceParams, ovpParams.serviceParams, {ks: ks, clientTag: 'html5:v' + playerVersion}, event);\n    const request = new RequestBuilder();\n    request.service = SERVICE_NAME;\n    request.action = 'collect';\n    request.method = 'GET';\n    request.tag = 'stats-collect';\n    request.params = serviceParams;\n    request.url = serviceUrl + '?service=' + request.service + '&action=' + request.action + '&' + param(request.params);\n    return request;\n  }\n}\n","// @flow\nimport RequestBuilder from '../../../../util/request-builder';\nimport OVPConfiguration from '../../config';\nimport OVPStatsService from './stats-service';\n\ndeclare var __VERSION__: string;\ndeclare var __NAME__: string;\n\nconst NAME = __NAME__ + '-stats-service';\nconst VERSION = __VERSION__;\n\nexport {OVPStatsService, OVPConfiguration, RequestBuilder, NAME, VERSION};\n"],"sourceRoot":""}